// Mocks generated by Mockito 5.4.0 from annotations
// in weather_app/test/features/home/domain/usecases/get_geocode_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_app/features/home/data/models/geocode.dart' as _i8;
import 'package:weather_app/features/home/data/models/weather_response.dart'
    as _i6;
import 'package:weather_app/features/home/domain/params/geocode_params.dart'
    as _i9;
import 'package:weather_app/features/home/domain/params/weather_params.dart'
    as _i7;
import 'package:weather_app/features/home/domain/repository/weather_repo.dart'
    as _i3;
import 'package:weather_app/utils/core/failures.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WeatherRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRepo extends _i1.Mock implements _i3.WeatherRepo {
  MockWeatherRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.WeatherResponse?>> getWeather(
          _i7.WeatherParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeather,
          [params],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.WeatherResponse?>>.value(
                _FakeEither_0<_i5.Failure, _i6.WeatherResponse?>(
          this,
          Invocation.method(
            #getWeather,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.WeatherResponse?>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.GeoCode?>> getGeoCode(
          _i9.GeoCodeParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGeoCode,
          [params],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i8.GeoCode?>>.value(
            _FakeEither_0<_i5.Failure, _i8.GeoCode?>(
          this,
          Invocation.method(
            #getGeoCode,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i8.GeoCode?>>);
}
